version: '3.3'
networks:
  internal: null
services:
  traefik:
    image: 'traefik:alpine'
    restart: always
    networks:
      - default
      - internal
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - './traefik.toml:/traefik.toml'
      - './acme.json:/acme.json'
    command: '--api --docker'
  db:
    restart: always
    networks:
      - internal
    labels:
      - traefik.enable=false
    image: postgres
    environment:
      - POSTGRES_PASSWORD
  adminer:
    image: adminer
    restart: always
    networks:
      - internal
    ports:
      - '8080:8080'
    labels:
      - traefik.backend=adminer
      - traefik.docker.network=traefik
      - 'traefik.frontend.rule=Host:${HOSTNAME};PathPrefixStrip:/adminer'
      - traefik.port=8080
  app:
    build:
      context: .
    restart: always
    networks:
      - internal
    ports:
      - '3000:3000'
    labels:
      - traefik.backend=dashboard
      - traefik.docker.network=traefik
      - 'traefik.frontend.rule=Host:${HOSTNAME}'
      - traefik.port=3000
    environment:
      - POSTGRES_PASSWORD
    working_dir: /home/node/app
    user: node
    volumes:
      - './:/home/node/app'
      - /home/node/app/node_modules
    command: npm start
